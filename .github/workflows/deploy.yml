name: Deploy MarketFractals

on:
  push:
    branches:
      - main  # Deploy when changes are pushed to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    # SSH into server through CloudFlare and run sell commands
    # Note that the environment variables can only be set in GitHub secrets to pass over to ssh shell
    # Tech debt: replace hard-code directories and names and read from .env variables 
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Cloudflared
        run: |
          curl -L https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -o cloudflared
          chmod +x cloudflared
          sudo mv cloudflared /usr/local/bin/cloudflared

      - name: Set up SSH configuration
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.MARKETFRACTALS_PUBLIC_KEY }}" >> ~/.ssh/known_hosts
          echo "${{ secrets.MARKETFRACTALS_GITHUB_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null	
          ssh-add ~/.ssh/id_rsa
          echo -e "Host market-fractals
                StrictHostKeyChecking=no
                Hostname ssh.marketfractals.com
                IdentityFile ~/.ssh/id_rsa
                User ${{ secrets.USER }}
                LogLevel VERBOSE
                Port 22
                ProxyCommand cloudflared access ssh --hostname %h
                " > ~/.ssh/config
          chmod 600 ~/.ssh/config

      - name: Debugging Cloudflare and SSH Config
        run: |
          echo "Listing all SSH configurations:"
          ls -al /etc/ssh/
          echo "Check if cloudflared exists as command"
          which cloudflared || echo "No CloudFlared Found"
          echo "Listing files in cloudflared config directory:"
          ls -al /usr/local/bin/cloudflared
          echo "Displaying content of cloudflared config files:"
          cat /usr/local/bin/cloudflared/config.yml || echo "No cloudflared config file"
          echo "Displaying content of ssh config files:"
          cat /etc/ssh/ssh_config || echo "No SSH config file"
          echo "chekc ssh_config.d"
          ls -al /etc/ssh/ssh_config.d/

      - name: SSH into server and deploy
        run: |
          ssh -v -o StrictHostKeyChecking=no \
          -o ProxyCommand="cloudflared access ssh --hostname ssh.marketfractals.com" ${{ secrets.USER }}@ssh.marketfractals.com \
          "echo 'Deploying application';
          cd /home/market-fractals/GitHub/market-fractals-site;
          git pull origin main;
          if docker ps -a --format '{{.Names}}' | grep -q "market-fractals-container"; then
            docker stop "market-fractals-container"
            docker rm "market-fractals-container"
            echo "Removed existing container market-fractals-container."
          else
            echo "No container named market-fractals-container exists."
          fi;
          if [ -n "$(docker images -q "market-fractals-site/market-fractals:v1.0")" ]; then
            docker rmi -f "market-fractals-site/market-fractals:v1.0"
            echo "Removed existing image market-fractals-site/market-fractals:v1.0."
          else
            echo "No image named market-fractals-site/market-fractals:v1.0."
          fi;
          docker build -t market-fractals-site/market-fractals:v1.0 ./frontend;
          docker build -t market-fractals-site/market-fractals-data:v1.0 ./backend;
          docker-compose up -d;
          exit;"
        env:
          CF_TUNNEL_TOKEN: ${{ secrets.CloudFlare_Tunnel_Token }}
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock