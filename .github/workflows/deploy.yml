name: Build and Deploy React App

on:
  push:
    branches:
      - main  # Deploy when changes are pushed to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Install Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
      
      - name: Set up Docker Compose
        run: docker-compose -f compose.yml up --build -d

  deploy:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    # Copy Docker image to server and deploy
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Cloudflared
        run: |
          curl -L https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -o cloudflared
          chmod +x cloudflared
          sudo mv cloudflared /usr/local/bin/cloudflared
        
      - name: Set up SSH configuration
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.MARKETFRACTALS_GITHUB_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "Host ssh.marketfractals.com
                Hostname ssh.marketfractals.com
                User ${{ secrets.USER }}
                ProxyCommand cloudflared access ssh --hostname %h
                " > ~/.ssh/config
          chmod 600 ~/.ssh/config

      - name: Debugging Cloudflare and SSH Config
        run: |
          echo "Listing all SSH configurations:"
          ls -al /etc/ssh/
          echo "Listing files in cloudflared config directory:"
          which cloudflared || echo "No CloudFlared Found"
          ls -al /usr/local/bin/cloudflared
          echo "Displaying content of config files:"
          cat /usr/local/bin/cloudflared/config.yml || echo "No cloudflared config file"
          cat /etc/ssh/ssh_config || echo "No SSH config file"

      - name: SSH into server
        run: |
          ssh -v ssh.marketfractals.com "echo 'Deploying application'; git pull origin main; docker-compose up --build -d"
        env:
          CLOUDFLARE_TUNNEL_TOKEN: ${{ secrets.CLOUDFLARE_TUNNEL_TOKEN }}